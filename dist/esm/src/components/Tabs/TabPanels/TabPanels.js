import{jsx as e}from"react/jsx-runtime";import s from"classnames";import{camelCase as t}from"lodash-es";import r,{forwardRef as a,useRef as i,useMemo as o}from"react";import n from"../../../hooks/useMergeRefs.js";import{TabPanelsAnimationDirection as m}from"./TabPanelsConstants.js";import{getTestId as c,ComponentDefaultTestId as l}from"../../../tests/testIds.js";import{getStyle as p}from"../../../helpers/typesciptCssModulesHelper.js";import{withStaticProps as d}from"../../../types/withStaticProps.js";import f from"./TabPanels.module.scss.js";var u=a((function(a,d){var u=a.className,v=a.id,b=a.activeTabId,j=void 0===b?0:b,h=a.animationDirection,P=void 0===h?m.RTL:h,T=a.children,g=a.renderOnlyActiveTab,N=void 0!==g&&g,O=a["data-testid"],x=i(null),y=n({refs:[d,x]}),A=o((function(){return r.Children.map(T,(function(e,a){var i=j===a;if(N&&!i)return null;var o=i?"active":"non-active",n=i?"animation-direction-".concat(P):"";return r.cloneElement(e,Object.assign(Object.assign({index:a},e.props),{className:s(f.tabPanel,[p(f,o)],[p(f,t(n))],e.props.className)}))})).filter(Boolean)}),[T,j,N,P]);return e("div",Object.assign({ref:y,className:s(f.tabPanelsWrapper,u),id:v,"data-testid":O||c(l.TAB_PANELS,v)},{children:A}))}));Object.assign(u,{isTabPanels:!0});var v=d(u,{animationDirections:m});export{v as default};
