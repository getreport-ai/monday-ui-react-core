import{__rest as o}from"../../../_virtual/_tslib.js";import{jsx as t}from"react/jsx-runtime";import s,{forwardRef as r,useRef as i}from"react";import e from"classnames";import{getTestId as a}from"../../tests/testIds.js";import{ComponentDefaultTestId as l}from"../../tests/constants.js";import{TypographyColor as m,TypographyAlign as p}from"./TypographyConstants.js";import{useTooltipProps as n,useEllipsisClass as d}from"./TypographyHooks.js";import c from"../Tooltip/Tooltip.js";import f from"./Typography.module.scss.js";import j from"../../hooks/useMergeRefs.js";var T=r((function(r,T){var h=r.className,u=r.id,v=r.children,g=r.tooltipProps,y=r["data-testid"],x=void 0===y?a(l.TEXT,u):y,R=r.element,b=void 0===R?"span":R,N=r.color,P=void 0===N?m.PRIMARY:N,k=r.align,w=void 0===k?p.START:k,A=r.ellipsis,E=void 0===A||A,I=r.maxLines,L=void 0===I?1:I,M=r.withoutTooltip,O=void 0!==M&&M,_=r.role,C=o(r,["className","id","children","tooltipProps","data-testid","element","color","align","ellipsis","maxLines","withoutTooltip","role"]),H=i(null),S=j({refs:[T,H]}),X=d(S,E,L),Y=X.ref,q=X.class,z=n(H,O,E,g,v);return t(c,Object.assign({},z,{children:s.createElement(b,Object.assign({id:u,"data-testid":x,className:e(f.typography,f[P],f[w],q,h),ref:Y,role:_},C),v)}))}));export{T as default};
